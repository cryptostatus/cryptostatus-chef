upstream api {
  server unix:///home/deployer/www/cryptostatus/shared/tmp/sockets/puma.sock;
}

server {
  listen 80;
  server_name _;
  return https://$host$request_uri;
}

server {
  listen 443 ssl http2;

  client_max_body_size 100m;

  server_name api.cryptostat.us;

  ssl_certificate /etc/nginx/ssl/api.cryptostat.us.crt;
  ssl_certificate_key /etc/nginx/ssl/api.cryptostat.us.key;

  root /home/deployer/www/cryptostatus/current/public;

  ssl_session_timeout 24h;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:20m;

  location / {
    proxy_pass http://api;
    proxy_set_header Client-Ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
  }
}

server {
  listen 443 ssl http2;
  server_name cryptostat.us;

  ssl_certificate /etc/nginx/ssl/cryptostat.us.crt;
  ssl_certificate_key /etc/nginx/ssl/cryptostat.us.key;

  root /home/deployer/www/cryptostatus-client/current/build;

  ssl_session_timeout 24h;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:20m;

  location / {
    try_files $uri /index.html;
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
}
